{
  "languageserver": {
    "swift": {
      "enabled": false,
      "command": "xcrun --find sourcekit-lsp",
      "args": [],
      "rootPatterns": ["Package.swift", ".vim/", ".git/"],
      "filetypes": ["c", "swift"]
    },
    "clangd": {
      "enable": true,
      "command": "xcrun --find clangd",
      "args": ["-completion-style=detailed",
        "-log=error",
        "-pretty",
        "-limit-results=100",
        "-j=6",
        "-pch-storage=disk",
        "-resource-dir=xcrun clang -print-resource-dir"],
        "rootPatterns": ["compile_flags.txt", "compile_commands.json", ".vim/", ".git/", ".hg/"],
        "filetypes": ["c", "c++", "cc", "cpp", "objc", "objcpp"],
        "trace.server": "verbose"
    },
    "bash": {
      "command": "( type bash-language-server || yarn global add bash-language-server ) >/dev/null 2>&1 && echo bash-language-server",
      "args": ["start"],
      "filetypes": ["sh"],
      "ignoredRootPaths": ["~"]
    },
    "cmake": {
      "command": "( type cmake-language-server || pip3 install cmake-language-server ) >/dev/null 2>&1 && echo cmake-language-server",
      "filetypes": ["cmake"],
      "rootPatterns": [
        "build/"
      ],
      "initializationOptions": {
        "buildDirectory": "build"
      }
    },
    "dockerfile": {
      "command": "( type dockerfile-language-server-nodejs || yarn global add dockerfile-language-server-nodejs ) >/dev/null 2>&1 && echo docker-langserver",
      "filetypes": ["dockerfile"],
      "args": ["--stdio"]
    },
    "sql": {
      "command": "( type sql-language-server || yarn global add sql-language-server ) >/dev/null 2>&1 && echo sql-language-server",
      "args" : ["up", "--method", "stdio"],
      "filetypes": ["sql", "mysql"]
    },
    "graphql": {
      "command": "( type graphql-lsp || yarn global add graphql-config graphql-language-service-cli ) >/dev/null 2>&1 && echo graphql-lsp",
      "args": ["server", "-m", "stream"],
      "filetypes": ["graphql"],
      "trace.server": "verbose"
    }
  }
}
